// file: proto/datasource/v1/datasource.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: datasource/v1/datasource.proto

package datasourcev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_datasource_v1_datasource_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_datasource_v1_datasource_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{11, 0}
}

// QueryRequest 代表一次查询请求。
type QueryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// biz_name 是网关用于路由的业务组标识。
	BizName string `protobuf:"bytes,1,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
	// query 是一个通用的、结构化的查询对象。
	// 它的具体结构由插件自行定义和解释。网关内核完全不关心其内容。
	//
	// 示例 (对于一个SQL插件):
	//
	//	{
	//	  "table": "users",
	//	  "filters": [{"field": "age", "op": ">", "value": 30}],
	//	  "page": 1,
	//	  "size": 10
	//	}
	//
	// 示例 (对于一个Elasticsearch插件):
	//
	//	{
	//	  "index": "products",
	//	  "query": { "match": { "description": "durable laptop" } }
	//	}
	Query         *structpb.Struct `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{0}
}

func (x *QueryRequest) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *QueryRequest) GetQuery() *structpb.Struct {
	if x != nil {
		return x.Query
	}
	return nil
}

// QueryResult 代表一次查询的结果。
type QueryResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// data 是一个通用的、结构化的结果对象。
	// 这允许插件返回任何形式的数据，例如包含分页、聚合、高亮等信息的复杂结构。
	//
	// 示例 (对于一个SQL插件):
	//
	//	{
	//	  "items": [ {"id": 1, "name": "Alice"}, {"id": 2, "name": "Bob"} ],
	//	  "total": 100
	//	}
	//
	// 示例 (对于一个Elasticsearch插件):
	//
	//	{
	//	  "hits": [ {"_id": "a", "_source": {...}, "highlight": {...}} ],
	//	  "total": { "value": 1, "relation": "eq" },
	//	  "aggregations": { ... }
	//	}
	Data *structpb.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// source 字段用于标识处理此请求的插件类型。
	Source        string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{1}
}

func (x *QueryResult) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryResult) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// MutateRequest 代表一次写操作请求，同样变得通用。
type MutateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// biz_name 是网关用于路由的业务组标识。
	BizName string `protobuf:"bytes,1,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
	// operation 是一个字符串，用于告诉插件执行何种类型的写操作。
	// 常见的操作有 "create", "update", "delete", "bulk", "upsert" 等。
	// 具体支持哪些操作由插件自行定义。
	Operation string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	// payload 是本次写操作的载荷，一个通用的结构化对象。
	//
	// 示例 (对于 "create" 操作):
	//
	//	{
	//	  "table": "posts",
	//	  "data": { "title": "New Post", "content": "..." }
	//	}
	Payload       *structpb.Struct `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateRequest) Reset() {
	*x = MutateRequest{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateRequest) ProtoMessage() {}

func (x *MutateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateRequest.ProtoReflect.Descriptor instead.
func (*MutateRequest) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{2}
}

func (x *MutateRequest) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *MutateRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *MutateRequest) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

// MutateResult 代表一次写操作的结果。
type MutateResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// data 是一个通用的结果对象，可以包含比简单布尔值更丰富的信息。
	//
	// 示例:
	//
	//	{
	//	  "success": true,
	//	  "id": "post-123",
	//	  "affected_rows": 1,
	//	  "message": "操作成功"
	//	}
	Data *structpb.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// source 字段用于标识处理此请求的插件类型。
	Source        string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MutateResult) Reset() {
	*x = MutateResult{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutateResult) ProtoMessage() {}

func (x *MutateResult) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutateResult.ProtoReflect.Descriptor instead.
func (*MutateResult) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{3}
}

func (x *MutateResult) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MutateResult) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// GetPluginInfo 请求体为空。
type GetPluginInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPluginInfoRequest) Reset() {
	*x = GetPluginInfoRequest{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginInfoRequest) ProtoMessage() {}

func (x *GetPluginInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPluginInfoRequest) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{4}
}

// GetPluginInfoResponse 返回插件的元数据。
type GetPluginInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 插件的唯一名称, e.g., "official-sqlite-plugin"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 插件的版本号, e.g., "1.0.2"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// 插件处理的数据源类型, e.g., "SQL", "Search", "Graph", "TimeSeries"
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// 这个插件实例负责处理的所有业务组 (biz_name) 列表
	// 这是网关注册和路由的关键！
	SupportedBizNames []string `protobuf:"bytes,4,rep,name=supported_biz_names,json=supportedBizNames,proto3" json:"supported_biz_names,omitempty"`
	// 插件的详细描述，可以是 Markdown 格式，用于在UI中展示。
	DescriptionMarkdown string `protobuf:"bytes,5,opt,name=description_markdown,json=descriptionMarkdown,proto3" json:"description_markdown,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetPluginInfoResponse) Reset() {
	*x = GetPluginInfoResponse{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPluginInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginInfoResponse) ProtoMessage() {}

func (x *GetPluginInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPluginInfoResponse) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{5}
}

func (x *GetPluginInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPluginInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetPluginInfoResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetPluginInfoResponse) GetSupportedBizNames() []string {
	if x != nil {
		return x.SupportedBizNames
	}
	return nil
}

func (x *GetPluginInfoResponse) GetDescriptionMarkdown() string {
	if x != nil {
		return x.DescriptionMarkdown
	}
	return ""
}

// --- Schema 相关 (结构相对固定，保持不变) ---
type SchemaRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	BizName string                 `protobuf:"bytes,1,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`
	// table_name 是可选的，如果为空，插件应返回所有可访问表的 schema。
	TableName     string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchemaRequest) Reset() {
	*x = SchemaRequest{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaRequest) ProtoMessage() {}

func (x *SchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaRequest.ProtoReflect.Descriptor instead.
func (*SchemaRequest) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{6}
}

func (x *SchemaRequest) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *SchemaRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type FieldDescription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataType      string                 `protobuf:"bytes,2,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`              // 例如: "TEXT", "INTEGER", "TIMESTAMP", "NESTED"
	IsSearchable  bool                   `protobuf:"varint,3,opt,name=is_searchable,json=isSearchable,proto3" json:"is_searchable,omitempty"` // 该字段是否可以作为查询条件
	IsReturnable  bool                   `protobuf:"varint,4,opt,name=is_returnable,json=isReturnable,proto3" json:"is_returnable,omitempty"` // 该字段是否可以在结果中返回
	IsPrimary     bool                   `protobuf:"varint,5,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`          // 是否是主键或唯一标识符
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                        // 字段的描述信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldDescription) Reset() {
	*x = FieldDescription{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDescription) ProtoMessage() {}

func (x *FieldDescription) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDescription.ProtoReflect.Descriptor instead.
func (*FieldDescription) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{7}
}

func (x *FieldDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldDescription) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *FieldDescription) GetIsSearchable() bool {
	if x != nil {
		return x.IsSearchable
	}
	return false
}

func (x *FieldDescription) GetIsReturnable() bool {
	if x != nil {
		return x.IsReturnable
	}
	return false
}

func (x *FieldDescription) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *FieldDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SchemaResult struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Tables        map[string]*TableSchema `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SchemaResult) Reset() {
	*x = SchemaResult{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaResult) ProtoMessage() {}

func (x *SchemaResult) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaResult.ProtoReflect.Descriptor instead.
func (*SchemaResult) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{8}
}

func (x *SchemaResult) GetTables() map[string]*TableSchema {
	if x != nil {
		return x.Tables
	}
	return nil
}

type TableSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []*FieldDescription    `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableSchema) Reset() {
	*x = TableSchema{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSchema) ProtoMessage() {}

func (x *TableSchema) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSchema.ProtoReflect.Descriptor instead.
func (*TableSchema) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{9}
}

func (x *TableSchema) GetFields() []*FieldDescription {
	if x != nil {
		return x.Fields
	}
	return nil
}

// --- HealthCheck 相关 (保持不变) ---
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{10}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=datasource.v1.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_datasource_v1_datasource_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datasource_v1_datasource_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_datasource_v1_datasource_proto_rawDescGZIP(), []int{11}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_datasource_v1_datasource_proto protoreflect.FileDescriptor

const file_datasource_v1_datasource_proto_rawDesc = "" +
	"\n" +
	"\x1edatasource/v1/datasource.proto\x12\rdatasource.v1\x1a\x1cgoogle/protobuf/struct.proto\"X\n" +
	"\fQueryRequest\x12\x19\n" +
	"\bbiz_name\x18\x01 \x01(\tR\abizName\x12-\n" +
	"\x05query\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05query\"R\n" +
	"\vQueryResult\x12+\n" +
	"\x04data\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x04data\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\"{\n" +
	"\rMutateRequest\x12\x19\n" +
	"\bbiz_name\x18\x01 \x01(\tR\abizName\x12\x1c\n" +
	"\toperation\x18\x02 \x01(\tR\toperation\x121\n" +
	"\apayload\x18\x03 \x01(\v2\x17.google.protobuf.StructR\apayload\"S\n" +
	"\fMutateResult\x12+\n" +
	"\x04data\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x04data\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\"\x16\n" +
	"\x14GetPluginInfoRequest\"\xbc\x01\n" +
	"\x15GetPluginInfoResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12.\n" +
	"\x13supported_biz_names\x18\x04 \x03(\tR\x11supportedBizNames\x121\n" +
	"\x14description_markdown\x18\x05 \x01(\tR\x13descriptionMarkdown\"I\n" +
	"\rSchemaRequest\x12\x19\n" +
	"\bbiz_name\x18\x01 \x01(\tR\abizName\x12\x1d\n" +
	"\n" +
	"table_name\x18\x02 \x01(\tR\ttableName\"\xce\x01\n" +
	"\x10FieldDescription\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tdata_type\x18\x02 \x01(\tR\bdataType\x12#\n" +
	"\ris_searchable\x18\x03 \x01(\bR\fisSearchable\x12#\n" +
	"\ris_returnable\x18\x04 \x01(\bR\fisReturnable\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x05 \x01(\bR\tisPrimary\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\"\xa6\x01\n" +
	"\fSchemaResult\x12?\n" +
	"\x06tables\x18\x01 \x03(\v2'.datasource.v1.SchemaResult.TablesEntryR\x06tables\x1aU\n" +
	"\vTablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.datasource.v1.TableSchemaR\x05value:\x028\x01\"F\n" +
	"\vTableSchema\x127\n" +
	"\x06fields\x18\x01 \x03(\v2\x1f.datasource.v1.FieldDescriptionR\x06fields\"\x14\n" +
	"\x12HealthCheckRequest\"\x9b\x01\n" +
	"\x13HealthCheckResponse\x12H\n" +
	"\x06status\x18\x01 \x01(\x0e20.datasource.v1.HealthCheckResponse.ServingStatusR\x06status\":\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x022\x8d\x03\n" +
	"\n" +
	"DataSource\x12Z\n" +
	"\rGetPluginInfo\x12#.datasource.v1.GetPluginInfoRequest\x1a$.datasource.v1.GetPluginInfoResponse\x12@\n" +
	"\x05Query\x12\x1b.datasource.v1.QueryRequest\x1a\x1a.datasource.v1.QueryResult\x12C\n" +
	"\x06Mutate\x12\x1c.datasource.v1.MutateRequest\x1a\x1b.datasource.v1.MutateResult\x12F\n" +
	"\tGetSchema\x12\x1c.datasource.v1.SchemaRequest\x1a\x1b.datasource.v1.SchemaResult\x12T\n" +
	"\vHealthCheck\x12!.datasource.v1.HealthCheckRequest\x1a\".datasource.v1.HealthCheckResponseB#Z!gen/go/datasource/v1;datasourcev1b\x06proto3"

var (
	file_datasource_v1_datasource_proto_rawDescOnce sync.Once
	file_datasource_v1_datasource_proto_rawDescData []byte
)

func file_datasource_v1_datasource_proto_rawDescGZIP() []byte {
	file_datasource_v1_datasource_proto_rawDescOnce.Do(func() {
		file_datasource_v1_datasource_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_datasource_v1_datasource_proto_rawDesc), len(file_datasource_v1_datasource_proto_rawDesc)))
	})
	return file_datasource_v1_datasource_proto_rawDescData
}

var file_datasource_v1_datasource_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_datasource_v1_datasource_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_datasource_v1_datasource_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0), // 0: datasource.v1.HealthCheckResponse.ServingStatus
	(*QueryRequest)(nil),                   // 1: datasource.v1.QueryRequest
	(*QueryResult)(nil),                    // 2: datasource.v1.QueryResult
	(*MutateRequest)(nil),                  // 3: datasource.v1.MutateRequest
	(*MutateResult)(nil),                   // 4: datasource.v1.MutateResult
	(*GetPluginInfoRequest)(nil),           // 5: datasource.v1.GetPluginInfoRequest
	(*GetPluginInfoResponse)(nil),          // 6: datasource.v1.GetPluginInfoResponse
	(*SchemaRequest)(nil),                  // 7: datasource.v1.SchemaRequest
	(*FieldDescription)(nil),               // 8: datasource.v1.FieldDescription
	(*SchemaResult)(nil),                   // 9: datasource.v1.SchemaResult
	(*TableSchema)(nil),                    // 10: datasource.v1.TableSchema
	(*HealthCheckRequest)(nil),             // 11: datasource.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 12: datasource.v1.HealthCheckResponse
	nil,                                    // 13: datasource.v1.SchemaResult.TablesEntry
	(*structpb.Struct)(nil),                // 14: google.protobuf.Struct
}
var file_datasource_v1_datasource_proto_depIdxs = []int32{
	14, // 0: datasource.v1.QueryRequest.query:type_name -> google.protobuf.Struct
	14, // 1: datasource.v1.QueryResult.data:type_name -> google.protobuf.Struct
	14, // 2: datasource.v1.MutateRequest.payload:type_name -> google.protobuf.Struct
	14, // 3: datasource.v1.MutateResult.data:type_name -> google.protobuf.Struct
	13, // 4: datasource.v1.SchemaResult.tables:type_name -> datasource.v1.SchemaResult.TablesEntry
	8,  // 5: datasource.v1.TableSchema.fields:type_name -> datasource.v1.FieldDescription
	0,  // 6: datasource.v1.HealthCheckResponse.status:type_name -> datasource.v1.HealthCheckResponse.ServingStatus
	10, // 7: datasource.v1.SchemaResult.TablesEntry.value:type_name -> datasource.v1.TableSchema
	5,  // 8: datasource.v1.DataSource.GetPluginInfo:input_type -> datasource.v1.GetPluginInfoRequest
	1,  // 9: datasource.v1.DataSource.Query:input_type -> datasource.v1.QueryRequest
	3,  // 10: datasource.v1.DataSource.Mutate:input_type -> datasource.v1.MutateRequest
	7,  // 11: datasource.v1.DataSource.GetSchema:input_type -> datasource.v1.SchemaRequest
	11, // 12: datasource.v1.DataSource.HealthCheck:input_type -> datasource.v1.HealthCheckRequest
	6,  // 13: datasource.v1.DataSource.GetPluginInfo:output_type -> datasource.v1.GetPluginInfoResponse
	2,  // 14: datasource.v1.DataSource.Query:output_type -> datasource.v1.QueryResult
	4,  // 15: datasource.v1.DataSource.Mutate:output_type -> datasource.v1.MutateResult
	9,  // 16: datasource.v1.DataSource.GetSchema:output_type -> datasource.v1.SchemaResult
	12, // 17: datasource.v1.DataSource.HealthCheck:output_type -> datasource.v1.HealthCheckResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_datasource_v1_datasource_proto_init() }
func file_datasource_v1_datasource_proto_init() {
	if File_datasource_v1_datasource_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_datasource_v1_datasource_proto_rawDesc), len(file_datasource_v1_datasource_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datasource_v1_datasource_proto_goTypes,
		DependencyIndexes: file_datasource_v1_datasource_proto_depIdxs,
		EnumInfos:         file_datasource_v1_datasource_proto_enumTypes,
		MessageInfos:      file_datasource_v1_datasource_proto_msgTypes,
	}.Build()
	File_datasource_v1_datasource_proto = out.File
	file_datasource_v1_datasource_proto_goTypes = nil
	file_datasource_v1_datasource_proto_depIdxs = nil
}
